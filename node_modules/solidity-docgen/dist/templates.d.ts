export interface Templates {
    partials?: Record<string, () => string>;
    helpers?: Record<string, (...args: unknown[]) => string>;
}
/**
 * Loads the templates that will be used for rendering a site based on a
 * default theme and user templates.
 *
 * The result contains all partials and helpers defined in the user templates
 * and the default theme, where the user's take precedence if there is a clash.
 * Additionally, all theme partials are included with the theme prefix, e.g.
 * `markdown/contract` will be a partial.
 */
export declare function loadTemplates(defaultTheme: string, root: string, userTemplatesPath?: string): Promise<Templates>;
/**
 * Read templates and helpers from a directory.
 */
export declare function readTemplates(dir: string): Promise<Templates>;
//# sourceMappingURL=templates.d.ts.map