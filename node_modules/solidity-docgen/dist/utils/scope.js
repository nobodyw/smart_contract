"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getContractsInScope = void 0;
const utils_1 = require("solidity-ast/utils");
function getContractsInScope(item) {
    const cache = new WeakMap();
    return run(item.__item_context.file);
    function run(file, stack = new Set(), aliasedImport = false) {
        var _a;
        if (stack.has(file)) {
            if (aliasedImport) {
                throw new Error('Circular dependency detected: aliased imports not supported');
            }
            else {
                return {};
            }
        }
        if (cache.has(file)) {
            return cache.get(file);
        }
        stack.add(file);
        const scope = {};
        for (const c of (0, utils_1.findAll)('ContractDefinition', file)) {
            scope[c.name] = c;
        }
        for (const i of (0, utils_1.findAll)('ImportDirective', file)) {
            const importedFile = item.__item_context.build.deref('SourceUnit', i.sourceUnit);
            const importedScope = run(importedFile, stack, aliasedImport || i.symbolAliases.length > 0);
            if (i.symbolAliases.length === 0) {
                Object.assign(scope, importedScope);
            }
            else {
                for (const a of i.symbolAliases) {
                    scope[(_a = a.local) !== null && _a !== void 0 ? _a : a.foreign.name] = importedScope[a.foreign.name];
                }
            }
        }
        ;
        stack.delete(file);
        cache.set(file, scope);
        return scope;
    }
}
exports.getContractsInScope = getContractsInScope;
//# sourceMappingURL=scope.js.map